!function(e,t){"use strict";if("function"==typeof define)define(t);else if("undefined"!=typeof module&&module.exports)module.exports=t();else{var a=window||this,r=a[e],i=t();i.noConflict=function(){return a[e]=r,i},a[e]=i}}("SimpleSchema",function(){"use strict";var e=function(e){return e.toString().match(/function\s(.*)\(/)[1]},t=function(e){if(!e)throw new Error("Schema is empty");this.schema=e};return t.prototype.validate=function(e){if(!e)throw new Error("Object is empty");var t=[];if(this._doValidate({failures:t,schema:{path:"",node:this.schema},object:e}),t.length){var a=new Error("Validation failed");throw a.failures=t.map(function(e){return e[0]+": "+e[1]}),a}},t.prototype._doValidate=function(t){var a=t.schema.path,r=t.schema.node,i=t.object,n=t.failures,o=this;for(var s in r){var u=a+"/"+s,f=r[s],c=i[s],h=f.type;if(h)if(f.required&&void 0===c)n.push([u,"required"]);else switch(h){case String:"string"!=typeof c&&n.push([u,"must be a string"]);break;case Boolean:"boolean"!=typeof c&&n.push([u,"must be true or false"]);break;case Number:"number"!=typeof c&&n.push([u,"must be a number"]);break;case Date:case Object:case Array:c instanceof h||n.push([u,"must be of type "+e(h)]);break;default:if(h instanceof Array)if(c instanceof Array){var l=h[0];for(var d in c){var p=c[d];o._doValidate({failures:n,schema:{path:u+"/"+d,node:l},object:p})}}else n.push([u,"must be an array"]);else o._doValidate({failures:n,schema:{path:u,node:h},object:c})}else n.push([u,"invalid schema"])}},function(e){return new t(e)}});
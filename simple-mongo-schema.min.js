!function(e,t){"use strict";if("function"==typeof define)define(t);else if("undefined"!=typeof module&&module.exports)module.exports=t();else{var i=window||this,r=i[e],a=t();a.noConflict=function(){return i[e]=r,a},i[e]=a}}("SimpleSchema",function(){"use strict";var e=function(e){if(!e)throw new Error("Schema is empty");this.schema=e};return e.prototype.validate=function(e){if(!e)throw new Error("Object is empty");var t=[];if(this._doValidate({failures:t,schema:{path:"",node:this.schema},object:e}),t.length){var i=new Error("Validation failed");throw i.failures=t.map(function(e){return e[0]+": "+e[1]}),i}},e.prototype._doValidate=function(e){var t=e.schema.path,i=e.schema.node,r=e.object,a=e.failures,n=this;if(!r)return a.push([t,"value missing"]);for(var o in i)if(i.hasOwnProperty(o)){var s=t+"."+o,f=i[o],u=Object.keys(f),c=r[o];if(!f.type&&u.length||f.type&&f.type.type)n._doValidate({failures:a,schema:{path:s,node:f},object:c});else if(f instanceof Array)if(c instanceof Array){var h=f[0];for(var p in c){var d=c[p];n._doValidate({failures:a,schema:{path:s+"."+p,node:h},object:d})}}else a.push([s,"must be an array"]);else f.type?(f.required&&void 0===c&&a.push([s,"required"]),c instanceof f.type||a.push([s,"must be of type "+f.type])):a.push([s,"invalid schema"])}},function(t){return new e(t)}});